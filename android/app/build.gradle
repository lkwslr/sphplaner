def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystorePropertiesFile.withReader('UTF-8') { reader ->
        keystoreProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    signingConfigs {
        release {
            keyAlias keystoreProperties.getProperty('release.keyAlias')
            keyPassword keystoreProperties.getProperty('release.keyPassword')
            storeFile keystoreProperties.getProperty('release.storeFile') ? file(keystoreProperties.getProperty('release.storeFile')) : null
            storePassword keystoreProperties.getProperty('release.storePassword')
        }
        debug {
            keyAlias keystoreProperties.getProperty('debug.keyAlias')
            keyPassword keystoreProperties.getProperty('debug.keyPassword')
            storeFile keystoreProperties.getProperty('debug.storeFile') ? file(keystoreProperties.getProperty('debug.storeFile')) : null
            storePassword keystoreProperties.getProperty('debug.storePassword')
        }
    }

    compileSdkVersion 33
    ndkVersion flutter.ndkVersion

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "de.lkwslr.sphplaner"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-build-configuration.
        minSdkVersion 23
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
        ndk {
            abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86_64'
        }
    }

    buildTypes {
        release {
            manifestPlaceholders = [appName: "SPH Planer"]
            signingConfig signingConfigs.release
            minifyEnabled true
            ndk {
                debugSymbolLevel 'FULL'
            }
        }
        debug {
            manifestPlaceholders = [appName: "DEBUG Planer"]
            applicationIdSuffix '.debug'
            versionNameSuffix '-DEBUG'
            minifyEnabled true
            signingConfig signingConfigs.debug
        }
    }
    namespace 'de.lkwslr.sphplaner'
}

flutter {
    source '../..'
}

dependencies {
    implementation 'androidx.window:window:1.1.0'
    implementation 'androidx.window:window-java:1.1.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.2.2'
}